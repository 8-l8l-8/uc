/** * *************************************************** * Copyright (C), NingBo ZhiWeiReach info. Co., Ltd. * ***************************************************** *  * */package com.zhiwei.wjgg.service;import java.util.List;import com.zhiwei.wjgg.model.Event;import com.zhiwei.wjgg.model.EventUpate;/** * @author 落花流水 * @date 2016-02-27 */public interface EventService extends IGeneralService<Event>{    /**     *      * @Title: fuzzyQueryByWord      * @Description: TODO(模糊查询内容相关)      * @param @param word     * @param @param user     * @param @return 设定文件      * @return List<Event> 返回类型     */    public List<Event> fuzzyQueryByWord(String word,String user);        /**     *      * @Title: findEventsNearTime      * @Description: TODO(查询改用户的事件，按开始时间最近排序)      * @param @param user     * @param @return 设定文件      * @return List<Event> 返回类型     */    public List<Event> findEventsNearTime(String user);        /**     *      * @Title: findEventsByUser      * @Description: TODO(获取该用户的所有事件)      * @param @param user     * @param @return 设定文件      * @return List<Event> 返回类型     */    public List<Event> findEventsByUser(String user);            /**     *      * @Title: findEventsByType      * @Description: TODO(查询该用户下与该类型的所有事件)      * @param @param eventType     * @param @param user     * @param @return 设定文件      * @return List<Event> 返回类型     */    public List<Event> findEventsByType(String eventType,String user);        /**     *      * @Title: findEventsByLevel      * @Description: TODO(查询该用户下该等级的所有事件)      * @param @param eventLevel     * @param @param user     * @param @return 设定文件      * @return List<Event> 返回类型     */    public List<Event> findEventsByLevel(String eventLevel,String user);        /**     *      * @Title: findEventsByTypeAndLevel      * @Description: TODO(查询该用户下该类型该等级所有事件)      * @param @param eventType     * @param @param eventLevel     * @param @param user     * @param @return 设定文件      * @return List<Event> 返回类型     */    public List<Event> findEventsByTypeAndLevel(String eventType,String eventLevel,String user);        /**     *      * @Title: findEventsByUserIsStart     * @Description: TODO(获取该用户正在分析的事件)     * @param @return 设定文件     * @return List<Event> 返回类型     */    public List<Event> findEventsByUserIsStart(String user);    /**     *      * @Title: findContByUserIsStart      * @Description: TODO(获取该用户的正在分析事件数量)      * @param @param user     * @param @return 设定文件      * @return long 返回类型     */    public long findContByUserIsStart(String user);        /**     * @Title: findContByUser     * @Description: 更新事件的影响力指数和分词数据     * @param @return 设定文件     * @return long 返回类型     */    public boolean updataInfulenceAndWord(Event event);        /**     *      * @Title: findCompleteEvent      * @Description: TODO(根据用户名和最大获取数量来返回已经完成分析的事件)      * @param @param username     * @param @param maxCount     * @param @return 设定文件      * @return List<Event> 返回类型     */    public List<Event> findCompleteEvent(String username, int maxCount);}