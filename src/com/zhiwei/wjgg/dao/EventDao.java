/** * *************************************************** * Copyright (C), NingBo ZhiWeiReach info. Co., Ltd. * ***************************************************** *  * */package com.zhiwei.wjgg.dao;import java.util.List;import com.zhiwei.wjgg.dao.CommonDao;import com.zhiwei.wjgg.exception.ZhiWeiException;import com.zhiwei.wjgg.model.Event;/** * @author 落花流水 * @date 2016-02-27 */public interface EventDao extends CommonDao<Event>{   /**    *     * @Title: fuzzyQueryByWord     * @Description: TODO(模糊查询内容相关)     * @param @param word    * @param @param user    * @param @return    * @param @throws ZhiWeiException 设定文件     * @return List<Event> 返回类型    */    public List<Event> fuzzyQueryByWord(String word,String user)        throws ZhiWeiException;            /**     * @Title: findEventsNearTime     * @Description: TODO(按开始时间最近排序)     * @param @return     * @param @throws ZhiWeiException 设定文件     * @return List<Event> 返回类型     */    public List<Event> findEventsNearTime(String user)        throws ZhiWeiException;            /**     *      * @Title: findEventsByType      * @Description: TODO(查询该类型的所有事件)      * @param @param eventType     * @param @param user     * @param @return     * @param @throws ZhiWeiException 设定文件      * @return List<Event> 返回类型     */    public List<Event> findEventsByType(String eventType,String user)        throws ZhiWeiException;            /**     *      * @Title: findEventsByLevel      * @Description: TODO(查询该等级的所有事件)      * @param @param eventLevel     * @param @param user     * @param @return     * @param @throws ZhiWeiException 设定文件      * @return List<Event> 返回类型     */    public List<Event> findEventsByLevel(String eventLevel,String user)        throws ZhiWeiException;            /**     *      * @Title: findEventsByTypeAndLevel      * @Description: TODO(查询该类型该等级所有事件)      * @param @param eventType     * @param @param eventLevel     * @param @param user     * @param @return     * @param @throws ZhiWeiException 设定文件      * @return List<Event> 返回类型     */    public List<Event> findEventsByTypeAndLevel(String eventType, String eventLevel,String user)        throws ZhiWeiException;            /**     *      * @Title: findEventsByUser     * @Description: TODO(查询与该用户的所有事件)     * @param @param user     * @param @return     * @param @throws ZhiWeiException 设定文件     * @return List<Event> 返回类型     */    public List<Event> findEventsByUser(String user)        throws ZhiWeiException;            /**     *      * @Title: findByUserIsStart     * @Description: TODO(查询与该用户正在分析的所有事件)     * @param @param user     * @param @return     * @param @throws ZhiWeiException 设定文件     * @return List<Event> 返回类型     */    public List<Event> findByUserIsStart(String user)        throws ZhiWeiException;            /**     *      * @Title: findByUserIsStart     * @Description: TODO(查询该用户分析完毕的所有事件)     * @param @param user 用户名     * @param @param maxCount ：默认返回所有     * @param @return     * @param @throws ZhiWeiException 设定文件     * @return List<Event> 返回类型     */    public List<Event> findByUserIsComplete(String user, int maxCount)        throws ZhiWeiException;            /**     * @Title: findContByUserIsStart     * @Description: TODO(查询该用户正在分析的事件数)     * @param @param user     * @param @return     * @param @throws ZhiWeiException 设定文件     * @return long 返回类型     * @author 落花流水     */    public long findContByUserIsStart(String user)        throws ZhiWeiException;            /**     * @Title: findContByUserIsStart     * @Description: 获取状态为未结束的事件（用户程序循环获取未完成的事件）     * @param @param user     * @param @return     * @param @throws ZhiWeiException 设定文件     * @return long 返回类型     * @author 落花流水     */    public List<Event> findAliveEvent()        throws ZhiWeiException;        }